{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadys\\\\my-react-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from './logo.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\nconst user = {\n  firstName: 'Nadya',\n  lastName: 'ddd'\n};\nfunction getGreeting(user) {\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hi, \", formatName(user), \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hi, noname.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n\n//const element = <img src={logo}/>;\n/*const element = (\n    <div>\n        <h1>Hello!</h1>\n        <h2>���� ��� ������.</h2>\n    </div>\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(element);\n*/\n\nconst element = /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"my-button\",\n    id: \"myButton\",\n    children: \"Click\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n    children: \"document.getElementById('myButton').innerText = 'Clicked';\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this)]\n}, void 0, true);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(element);\n/*\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n<React.StrictMode>\n<App />\n</React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","formatName","user","firstName","lastName","getGreeting","children","fileName","_jsxFileName","lineNumber","columnNumber","element","className","id","root","createRoot","document","getElementById","render"],"sources":["C:/Users/nadys/my-react-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from './logo.svg';\n\nfunction formatName(user) {\n    return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n    firstName: 'Nadya',\n    lastName: 'ddd'\n};\n\nfunction getGreeting(user) {\n    if (user) {\n        return <h1>Hi, {formatName(user)}!</h1>;\n    }\n    return <h1>Hi, noname.</h1>;\n}\n\n//const element = <img src={logo}/>;\n/*const element = (\n    <div>\n        <h1>Hello!</h1>\n        <h2>���� ��� ������.</h2>\n    </div>\n);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(element);\n*/\n\nconst element = (\n    <>\n\n                    <button className=\"my-button\" id=\"myButton\">Click</button>\n\n                    <script>\n                        document.getElementById('myButton').innerText = 'Clicked';\n                    </script>\n        </>\n            );\n            const root = ReactDOM.createRoot(document.getElementById('root'));\n            root.render(element);\n            /*\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,SAASC,UAAUA,CAACC,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACC,SAAS,GAAG,GAAG,GAAGD,IAAI,CAACE,QAAQ;AAC/C;AAEA,MAAMF,IAAI,GAAG;EACTC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,WAAWA,CAACH,IAAI,EAAE;EACvB,IAAIA,IAAI,EAAE;IACN,oBAAOJ,OAAA;MAAAQ,QAAA,GAAI,MAAI,EAACL,UAAU,CAACC,IAAI,CAAC,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC3C;EACA,oBAAOZ,OAAA;IAAAQ,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,gBACTb,OAAA,CAAAE,SAAA;EAAAM,QAAA,gBAEgBR,OAAA;IAAQc,SAAS,EAAC,WAAW;IAACC,EAAE,EAAC,UAAU;IAAAP,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eAE1DZ,OAAA;IAAAQ,QAAA,EAAQ;EAER;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAAA,eACnB,CACG;AACD,MAAMI,IAAI,GAAGrB,QAAQ,CAACsB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,CAACP,OAAO,CAAC;AACpB;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAhB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}