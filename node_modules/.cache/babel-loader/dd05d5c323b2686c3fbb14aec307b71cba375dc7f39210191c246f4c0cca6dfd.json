{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadys\\\\my-react-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\nconst user = {\n  firstName: 'Nadya',\n  lastName: 'ddd'\n};\nfunction getGreeting(user) {\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hi, \", formatName(user), \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hi, noname.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n\n//const element = <img src={logo}/>;\n/*const element = (\n    <div>\n        <h1>Hello!</h1>\n        <h2>���� ��� ������.</h2>\n    </div>\n);*/\n\nexport default function Counter() {\n  _s();\n  const [count, setCount] = useState(0);\n  function handleClick() {\n    setCount(count + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\"You pressed me \", count, \" times\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nconst element = Counter();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(element);\n\n/*\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","logo","useState","jsxDEV","_jsxDEV","formatName","user","firstName","lastName","getGreeting","children","fileName","_jsxFileName","lineNumber","columnNumber","Counter","_s","count","setCount","handleClick","onClick","_c","element","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/nadys/my-react-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport logo from './logo.svg';\nimport { useState } from 'react';\n\nfunction formatName(user) {\n    return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n    firstName: 'Nadya',\n    lastName: 'ddd'\n};\n\nfunction getGreeting(user) {\n    if (user) {\n        return <h1>Hi, {formatName(user)}!</h1>;\n    }\n    return <h1>Hi, noname.</h1>;\n}\n\n//const element = <img src={logo}/>;\n/*const element = (\n    <div>\n        <h1>Hello!</h1>\n        <h2>���� ��� ������.</h2>\n    </div>\n);*/\n\nexport default function Counter() {\n    const [count, setCount] = useState(0);\n\n    function handleClick() {\n        setCount(count + 1);\n    }\n\n    return (\n        <button onClick={handleClick}>\n            You pressed me {count} times\n        </button>\n    );\n}\nconst element = Counter();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(element);\n\n/*\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAACC,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACC,SAAS,GAAG,GAAG,GAAGD,IAAI,CAACE,QAAQ;AAC/C;AAEA,MAAMF,IAAI,GAAG;EACTC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,WAAWA,CAACH,IAAI,EAAE;EACvB,IAAIA,IAAI,EAAE;IACN,oBAAOF,OAAA;MAAAM,QAAA,GAAI,MAAI,EAACL,UAAU,CAACC,IAAI,CAAC,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC3C;EACA,oBAAOV,OAAA;IAAAM,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASiB,WAAWA,CAAA,EAAG;IACnBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEA,oBACIb,OAAA;IAAQgB,OAAO,EAAED,WAAY;IAAAT,QAAA,GAAC,iBACX,EAACO,KAAK,EAAC,QAC1B;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB;AAACE,EAAA,CAZuBD,OAAO;AAAAM,EAAA,GAAPN,OAAO;AAa/B,MAAMO,OAAO,GAAGP,OAAO,CAAC,CAAC;AAEzB,MAAMQ,IAAI,GAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,CAACL,OAAO,CAAC;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAtB,eAAe,CAAC,CAAC;AAAC,IAAAqB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}